
==========================
How to use "3_say_my_name"
==========================

This module defines a print function
 "def say_my_name(first_name, last_name="")"


Usage
=====

The function take two string arguments and prints them out
 in a statement.




# Takes two string arguments and print the in a sentence

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Walter", "White")
    My name is Walter White


# If only one name is inputed the function prints the sentence
with the name passed

::

    >>> say_my_name("Fred")
    My name is Fred 

# Same behavior applies with an empty string.

::

    >>> say_my_name("") #doctest: +REPORT_NDIFF
    My name is  



# Arguments must be a string.

::

    >>> say_my_name(7, "Steven")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Ron", {})
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name(7)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::
    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

# The function must have an arguemnt passed else it raises a TypeError.

::

   >>> say_my_name()
   Traceback (most recent call last):
   TypeError: say_my_name() missing 1 required positional argument: 'first_name'
